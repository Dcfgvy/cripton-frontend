name: Build and Deploy Frontend Docker Image

on:
  push:
    branches:
      - prod

jobs:
  build-and-push:
    runs-on: ubuntu-22.04
    timeout-minutes: 20

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Log in to Docker registry
      - name: Log in to Docker registry
        run: docker login -u "dcfgvy" -p "${{ secrets.GH_TOKEN  }}" ghcr.io

      # Build the Docker image
      - name: Build Docker image
        run: docker build -t ghcr.io/dcfgvy/cripton-frontend:${{ github.sha }} -f Dockerfile .

      # Push the Docker image to the registry
      - name: Push Docker image
        run: |
          docker tag ghcr.io/dcfgvy/cripton-frontend:${{ github.sha }} ghcr.io/dcfgvy/cripton-frontend:latest
          docker push ghcr.io/dcfgvy/cripton-frontend:${{ github.sha }}
          docker push ghcr.io/dcfgvy/cripton-frontend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-22.04
    timeout-minutes: 20

    steps:
      # Install SSH Key
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2.7.0
        with:
          key: ${{ secrets.SERVER_SSH_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

      # Add Known Hosts
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      # Deploy to the Server
      - name: Deploy to server
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << EOF
          # Login to container registry on server
          docker login -u "dcfgvy" -p "${{ secrets.GH_TOKEN  }}" ghcr.io

          cd ${{ secrets.SERVER_WORK_DIR }}

          # Set the image tag and deploy
          TAG=${{ github.sha }} docker compose -f docker-compose.yml pull frontend
          TAG=${{ github.sha }} docker compose -f docker-compose.yml up -d frontend

          # Remove old unused frontend images (keep last 3 versions)
          docker images --filter "reference=ghcr.io/dcfgvy/cripton-frontend:*" --format "{{.Repository}}:{{.Tag}}" | \
            sort -V | head -n -3 | xargs -r docker rmi || true

          # Logout for security
          docker logout ghcr.io
          EOF
